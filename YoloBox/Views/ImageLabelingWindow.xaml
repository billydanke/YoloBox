<Window x:Class="YoloBox.Views.ImageLabelingWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:YoloBox.Views"
        xmlns:components="clr-namespace:YoloBox.Components"
        xmlns:converters="clr-namespace:YoloBox.Converters"
        xmlns:classes="clr-namespace:YoloBox.Classes"
        mc:Ignorable="d"
        Title="YoloBox - Image Labeling"
        Background="#202020"
        PreviewKeyDown="Window_PreviewKeyDown"
        Height="550" MinHeight="550" Width="900" MinWidth="900" WindowState="Maximized">

    <Window.Resources>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:CenterToLeftConverter x:Key="CenterToLeftConverter" />
        <converters:CenterToTopConverter x:Key="CenterToTopConverter" />
        <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
        <converters:DragWidthConverter x:Key="DragWidthConverter" />
        <converters:DragHeightConverter x:Key="DragHeightConverter" />
        <converters:MinValueConverter x:Key="MinValueConverter" />
        <converters:KeyToStringConverter x:Key="KeyToStringConverter" />
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Key="A" Command="{Binding PreviousImageCommand}" />
        <KeyBinding Key="Left" Command="{Binding PreviousImageCommand}" />
        <KeyBinding Key="D" Command="{Binding NextImageCommand}" />
        <KeyBinding Key="Right" Command="{Binding NextImageCommand}" />
        <KeyBinding Key="Delete" Command="{Binding DeleteLabelCommand}" CommandParameter="{Binding SelectedLabel}" />
    </Window.InputBindings>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="350" MinWidth="250" MaxWidth="400" />
            <ColumnDefinition />
            <ColumnDefinition Width="350" MinWidth="250" MaxWidth="400" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" MinHeight="100" />
            <RowDefinition Height="2*" MinHeight="100" />
            <RowDefinition Height="Auto" MinHeight="40" />
        </Grid.RowDefinitions>

        <Menu Grid.ColumnSpan="3" Background="#353535" Foreground="White" Height="24" BorderBrush="Gray">
            <MenuItem Header="_File" Height="24">
                <MenuItem Header="Load _Image Folder" Foreground="Black" Command="{Binding OpenImageFolderCommand}" />
                <MenuItem Header="Set _Label Folder" Foreground="Black" Command="{Binding SetLabelFolderCommand}" />
                <MenuItem Header="_Return to Main Menu" Foreground="Black" Command="{Binding ReturnToMainMenuCommand}" />
            </MenuItem>
        </Menu>

        <components:PanZoomBorder Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Margin="10" ClipToBounds="True" Background="Transparent">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                    <classes:PassEventArgsToCommand Command="{Binding StartLabelDragCommand}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="PreviewMouseMove">
                    <classes:PassEventArgsToCommand Command="{Binding UpdateLabelDragCommand}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                    <classes:PassEventArgsToCommand Command="{Binding FinishLabelDragCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <Grid Grid.Column="1" Grid.Row="1" Grid.RowSpan="2">
                <Grid.InputBindings>
                    <MouseBinding Gesture="LeftClick" Command="{Binding SelectLabelCommand}" CommandParameter="{x:Null}" />
                </Grid.InputBindings>

                <Image x:Name="LabelImage" Stretch="Uniform" Source="{Binding SelectedLabelImage.Image}">
                    
                </Image>

                <ItemsControl ItemsSource="{Binding Labels}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas Width="{Binding ActualWidth, ElementName=LabelImage}" Height="{Binding ActualHeight, ElementName=LabelImage}" IsItemsHost="True" ClipToBounds="True" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>

                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="Canvas.Left">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource CenterToLeftConverter}">
                                        <Binding Path="CenterX"/>
                                        <Binding Path="Width"/>
                                        <Binding ElementName="LabelImage" Path="ActualWidth"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Canvas.Top">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource CenterToTopConverter}">
                                        <Binding Path="CenterY"/>
                                        <Binding Path="Height"/>
                                        <Binding ElementName="LabelImage" Path="ActualHeight"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ItemsControl.ItemContainerStyle>

                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <components:ResizableLabelBox ImageWidth="{Binding ElementName=LabelImage, Path=ActualWidth}" ImageHeight="{Binding ElementName=LabelImage, Path=ActualHeight}" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <Canvas IsHitTestVisible="False" Width="{Binding ActualWidth, ElementName=LabelImage}" Height="{Binding ActualHeight, ElementName=LabelImage}">
                    <Rectangle Stroke="White" StrokeDashArray="4 2" StrokeThickness="1" Visibility="{Binding DragStart, Converter={StaticResource NullToVisibilityConverter}}">
                        <Canvas.Left>
                            <MultiBinding Converter="{StaticResource MinValueConverter}">
                                <Binding Path="DragStart.X"/>
                                <Binding Path="DragEnd.X"/>
                            </MultiBinding>
                        </Canvas.Left>
                        <Canvas.Top>
                            <MultiBinding Converter="{StaticResource MinValueConverter}">
                                <Binding Path="DragStart.Y"/>
                                <Binding Path="DragEnd.Y"/>
                            </MultiBinding>
                        </Canvas.Top>

                        <Rectangle.Width>
                            <MultiBinding Converter="{StaticResource DragWidthConverter}">
                                <Binding Path="DragStart.X"/>
                                <Binding Path="DragEnd.X"/>
                            </MultiBinding>
                        </Rectangle.Width>
                        <Rectangle.Height>
                            <MultiBinding Converter="{StaticResource DragHeightConverter}">
                                <Binding Path="DragStart.Y"/>
                                <Binding Path="DragEnd.Y"/>
                            </MultiBinding>
                        </Rectangle.Height>
                    </Rectangle>
                </Canvas>

            </Grid>
        </components:PanZoomBorder>
        
        <Border Grid.Row="1" Grid.RowSpan="2" Background="#303030" BorderBrush="Gray" BorderThickness="1 1 1 0">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <Border Background="#202020">
                    <TextBlock Text="Image List" Foreground="White" HorizontalAlignment="Center" Padding="5" FontWeight="SemiBold" />
                </Border>

                <ListBox Grid.Row="1" x:Name="ImagesListBox" ItemsSource="{Binding ImageList}" SelectedItem="{Binding SelectedLabelImage, Mode=TwoWay}" BorderThickness="0" Background="Transparent" Foreground="White" ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Border HorizontalAlignment="Stretch">
                                <Grid Margin="5 1" HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Text="{Binding ImageName}" VerticalAlignment="Center" />
                                    <Image Grid.Column="1" Source="/Resources/seen.png" Height="16" Margin="10 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Right" Visibility="{Binding IsSeen, Converter={StaticResource BooleanToVisibilityConverter}}" ToolTip="Seen" />

                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

            </Grid>
        </Border>
        <GridSplitter Grid.Column="0" Grid.Row="1" Grid.RowSpan="2" Width="5" HorizontalAlignment="Right" VerticalAlignment="Stretch" Background="Transparent" />

        <Border Grid.Column="2" Grid.Row="1" Background="#303030" BorderBrush="Gray" BorderThickness="1 1 1 0">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <Border Background="#202020">
                    <Grid>
                        <TextBlock Text="Classes" Foreground="White" HorizontalAlignment="Center" Padding="5" FontWeight="SemiBold" />
                        <Button Content="✚ New Class" Height="Auto" Padding="6 0" Margin="2" HorizontalAlignment="Right" Background="Transparent" Command="{Binding AddNewClassCommand}" />
                    </Grid>
                </Border>

                <ListBox Grid.Row="1" ItemsSource="{Binding Classes}" SelectedItem="{Binding SelectedClass, Mode=TwoWay}" Margin="5 3" HorizontalContentAlignment="Center" BorderThickness="0" Background="Transparent" FocusVisualStyle="{x:Null}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto" SelectionMode="Single">

                    <ListBox.Resources>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <Border Background="Transparent">
                                            <ContentPresenter />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.Resources>
                    
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel IsItemsHost="True" HorizontalAlignment="Center" />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>

                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Border x:Name="TagBorder" CornerRadius="6" Margin="1" Padding="10 6" MinWidth="50" BorderThickness="2" BorderBrush="{Binding Brush}" Background="Transparent">
                                <Border.InputBindings>
                                    <MouseBinding Gesture="RightClick" Command="{Binding DataContext.EditClassCommand, RelativeSource={RelativeSource AncestorType=ListBox}}" CommandParameter="{Binding}" />
                                </Border.InputBindings>

                                <TextBlock x:Name="TagText" Text="{Binding DisplayName}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{Binding Brush}" FontWeight="SemiBold">
                                    <TextBlock.Effect>
                                        <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="0" Opacity="1" />
                                    </TextBlock.Effect>
                                </TextBlock>
                            </Border>

                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" Value="True">
                                    <Setter TargetName="TagBorder" Property="Background" Value="{Binding HoverBrush}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" Value="True">
                                    <Setter TargetName="TagBorder" Property="Background" Value="{Binding Brush}" />
                                    <Setter TargetName="TagBorder" Property="BorderThickness" Value="0" />
                                    <Setter TargetName="TagBorder" Property="Padding" Value="12 8" />
                                    <Setter TargetName="TagText" Property="Foreground" Value="White" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

            </Grid>
        </Border>

        <Border Grid.Column="2" Grid.Row="2" Background="#303030" BorderBrush="Gray" BorderThickness="1 1 1 0">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <Border Background="#202020">
                    <TextBlock Text="Labels" Foreground="White" HorizontalAlignment="Center" Padding="5" FontWeight="SemiBold" />
                </Border>

                <ListBox Grid.Row="1" ItemsSource="{Binding Labels}" SelectedItem="{Binding SelectedLabel, Mode=TwoWay}" BorderThickness="0" Background="Transparent" SelectionMode="Single" ScrollViewer.CanContentScroll="False">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ListBox.ItemContainerStyle>
                    
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Border Background="#252525" Padding="5" CornerRadius="6">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="5"/>
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>

                                    <Rectangle Grid.Column="0" Fill="{Binding Class.Brush}" RadiusX="2" RadiusY="2" Effect="{Binding Class.GlowEffect}" />

                                    <Grid Grid.Column="1" x:Name="ContentGrid" Background="Transparent">
                                        
                                        <StackPanel Margin="10 0 0 0">
                                            <TextBlock Text="{Binding ClassName}" Foreground="White" FontWeight="Bold"/>
                                            <TextBlock Foreground="Gray" FontSize="12" TextTrimming="CharacterEllipsis">
                                                <TextBlock.Text>
                                                    <MultiBinding StringFormat="{}(X: {0:0.##}, Y: {1:0.##}, W: {2:0.##}, H: {3:0.##})">
                                                        <Binding Path="CenterX"/>
                                                        <Binding Path="CenterY"/>
                                                        <Binding Path="Width"/>
                                                        <Binding Path="Height"/>
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                        </StackPanel>

                                        <Button Content="✖" Foreground="White" Width="20" Height="20" VerticalAlignment="Center" HorizontalAlignment="Right" Background="Transparent" BorderBrush="{x:Null}" Command="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.DeleteLabelCommand}" CommandParameter="{Binding}" Panel.ZIndex="1" >
                                            <Button.Style>
                                                <Style TargetType="Button">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsMouseOver, ElementName=ContentGrid}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                        
                                    </Grid>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

            </Grid>
        </Border>

        <GridSplitter Grid.Row="2" Grid.Column="2" Height="5" VerticalAlignment="Top" HorizontalAlignment="Stretch" Background="Transparent" ResizeDirection="Rows" ResizeBehavior="PreviousAndCurrent" />
        <GridSplitter Grid.Column="2" Grid.Row="1" Grid.RowSpan="2" Width="5" HorizontalAlignment="Left" VerticalAlignment="Stretch" Background="Transparent" />
        
        <Border Grid.Row="3" Grid.ColumnSpan="3" Background="#353535" BorderBrush="Gray" BorderThickness="1" MinHeight="40">
            <Grid Height="40">
                <StackPanel Orientation="Horizontal" Margin="10 0" HorizontalAlignment="Left" VerticalAlignment="Center">
                    <TextBlock Text="Viewed " Foreground="White" />
                    <TextBlock Text="{Binding TotalSeenImages}" Foreground="White" />
                    <TextBlock Text="/" Foreground="White" />
                    <TextBlock Text="{Binding TotalImages}" Foreground="White" />

                    <TextBlock Text="(" Foreground="White" Margin="5 0 0 0" />
                    <TextBlock Text="{Binding CompletionPercentage}" Foreground="White" />
                    <TextBlock Text="%)" Foreground="White" />
                </StackPanel>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Content="← Last" Width="70" Command="{Binding PreviousImageCommand}" />
                    <Button Content="Next →" Width="70" Command="{Binding NextImageCommand}" />
                </StackPanel>
            </Grid>
        </Border>
        
    </Grid>
</Window>
